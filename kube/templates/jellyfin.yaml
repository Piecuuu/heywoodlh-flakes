---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: @namespace@
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "jellyfin"
    tailscale.com/tags: "tag:http"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
spec:
  strategy:
    type: Recreate
  replicas: @replicas@
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
    spec:
      containers:
        - name: jellyfin
          image: "docker.io/jellyfin/jellyfin:@tag@"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
          resources: {}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config
      - name: media
        nfs:
          server: 100.107.238.93
          path: /media/home-media
