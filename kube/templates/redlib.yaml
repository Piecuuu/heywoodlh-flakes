---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redlib
  labels:
    app.kubernetes.io/name: redlib
    app.kubernetes.io/instance: redlib
---
apiVersion: v1
kind: Service
metadata:
  name: redlib
  labels:
    app.kubernetes.io/name: redlib
    app.kubernetes.io/instance: redlib
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "teddit"
    tailscale.com/tags: "tag:http"
spec:
  type: ClusterIP
  ports:
    - port: @port@
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: redlib
    app.kubernetes.io/instance: redlib
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redlib
  labels:
    app.kubernetes.io/name: redlib
spec:
  replicas: @replicas@
  selector:
    matchLabels:
      app.kubernetes.io/name: redlib
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redlib
        app.kubernetes.io/instance: redlib
    spec:
      serviceAccountName: redlib
      securityContext:
        {}
      containers:
        - name: redlib
          securityContext: {}
          image: "@image@"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: "redlib-test-connection"
  labels:
    app.kubernetes.io/name: redlib-test
spec:
  containers:
    - name: curl
      image: busybox
      command: ['curl']
      args: ['redlib.@namespace@.svc.cluster.local:80']
  restartPolicy: OnFailure
