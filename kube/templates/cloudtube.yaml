---
apiVersion: v1
kind: Service
metadata:
  name: second
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: second
    app.kubernetes.io/instance: second
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "second"
    tailscale.com/tags: "tag:http"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: second
    app.kubernetes.io/instance: second
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: second
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: second
    app.kubernetes.io/instance: second
spec:
  replicas: @replicas@
  selector:
    matchLabels:
      app.kubernetes.io/name: second
      app.kubernetes.io/instance: second
  template:
    metadata:
      labels:
        app.kubernetes.io/name: second
        app.kubernetes.io/instance: second
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: second
          securityContext:
            {}
          image: "@second_image@"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudtube
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: cloudtube
    app.kubernetes.io/instance: cloudtube
---
apiVersion: v1
kind: Service
metadata:
  name: cloudtube
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: cloudtube
    app.kubernetes.io/instance: cloudtube
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "cloudtube"
    tailscale.com/tags: "tag:http"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cloudtube
    app.kubernetes.io/instance: cloudtube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudtube
  namespace: @namespace@
  labels:
    app.kubernetes.io/name: cloudtube
    app.kubernetes.io/instance: cloudtube
spec:
  replicas: @replicas@
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudtube
      app.kubernetes.io/instance: cloudtube
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudtube
        app.kubernetes.io/instance: cloudtube
    spec:
      serviceAccountName: cloudtube
      securityContext:
        {}
      containers:
        - name: cloudtube
          securityContext:
            {}
          image: "@image@"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 10412
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: INSTANCE_URI
              value: "http://second"
